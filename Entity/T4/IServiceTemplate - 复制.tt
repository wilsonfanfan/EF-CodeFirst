<#@ assembly name="System.Core" #>
<#@ assembly name="System" #>
<#@ assembly name="$(TargetDir)$(TargetFileName)" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.CodeDom" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ import namespace="Microsoft.CSharp" #>
<#@ include file="T4Toolbox.tt" #>
<#+
public class IServiceTemplate : Template
{
	public Type ModelType;
    public override string TransformText()
    {
#>
//--------------------------------------------------------------------------------------
// <auto-generated>
// QQ:584280962
// T4 生成时间<#=DateTime.Now.ToString() #>
// </auto-generated>
//--------------------------------------------------------------------------------------
using System.Collections.Generic;
using X.IDao;

namespace X.IService
{
    public interface I<#= ModelType.Name #>Service : IDependency
    {
        /// <summary>
        /// 增加一条数据
        /// </summary>
        IResponse<Models.<#= ModelType.Name #>> Create(Models.<#= ModelType.Name #> model);
        IListResult<Models.<#= ModelType.Name #>> GetList(string Filter = null, string Sort = null, params object[] Values);

        IPageResult<Models.<#= ModelType.Name #>> GetPageList(string Filter, string Sort, int PageNumber = 1, int PageSize = 20, params object[] Values);

        IResponse<Models.<#= ModelType.Name #>> GetById(long ID);
        IResponse<Models.<#= ModelType.Name #>> Get(string Filter, params object[] values);

        IResponse<bool> Update(Models.<#= ModelType.Name #> model, params string[] values);
        IResponse<int> Update(Dictionary<string, string> list, string where, params object[] values);
		IResponse<int> Update(string updateset, string where, params object[] values);
		IResponse<int> SetProperty(string field, int val, params long[] ids);
        IResponse<bool> Delete(long ID);
        IResponse<bool> DeleteIDs(List<long> IDs);
    }
}
<#+
        return this.GenerationEnvironment.ToString();
    }
}
#>